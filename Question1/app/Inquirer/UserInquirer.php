<?php

namespace App\Inquirer;

use App\Inquirer\Criteria\ManageVisibleCriteria;
use App\Inquirer\Criteria\OrderBy\Models\UserOrderByCriteria;
use App\Model\User;

class UserInquirer extends Inquirer
{
    public function __construct()
    {
        $this->table(User::class);
    }

    protected function bootCriteria(): void
    {
        parent::bootCriteria(); // TODO: Change the autogenerated stub
        $this->pushCriteria(UserOrderByCriteria::class);
        $this->pushCriteria(ManageVisibleCriteria::class);
    }

    /**
     * å»ºç«‹ User Manage Info
     *
     * @param  array  $params
     * @param  int|string|null  $ecsiteId
     * @return User
     */
    public function firstOrCreateUserManageInfo(array $params, int|string|null $ecsiteId = null): User
    {
        return $this->getModel()->firstOrCreate([
            'origin_key' => $params['_key'],
        ], [
            'account'   => $params['username'],
            'ecsite_id' => $ecsiteId,
            'role'      => ($params['ecsiteId'] ?? null) ? User::ROLE_AGENT : User::ROLE_EMPLOYEE,
            'phone'     => $params['phone'] ?? null,
            'mail'      => $params['mail'] ?? null,
            'status'    => $params['blocked'],
        ]);
    }
}
